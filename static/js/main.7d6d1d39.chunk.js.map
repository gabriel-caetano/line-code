{"version":3,"sources":["components/Input/index.jsx","components/Graph/index.jsx","components/Output/index.jsx","utils/converter.js","utils/nrz_l.js","utils/nrz_i.js","utils/ami.js","utils/pseudoternary.js","utils/manchester.js","utils/diferentialManchester.js","App.js","index.js"],"names":["ContainerStyle","padding","display","justifyContent","CardStyle","width","textAlign","InputStyle","marginBottom","maxWidth","minWidth","verticalAlign","Input","submit","options","useState","data","setData","type","setType","Container","style","Card","CardContent","Typography","fontSize","color","FormControl","margin","InputLabel","id","Select","labelId","value","onChange","event","newType","target","MenuItem","map","option","idx","TextField","e","fail","test","clean","match","label","overflow","SvgStyle","border","Graph","input","points","length","header","split","char","tick","i","push","height","index","domain","x","y","strokeWidth","labels","labelComponent","standalone","crossAxis","tickValues","grid","stroke","axis","tickLabels","fill","theme","VictoryTheme","material","dependentAxis","ticks","maxWidt","Output","typeName","originalValue","convertedPoints","convertions","flat","chars","prev","val","prevOne","prevZero","beginning","end","conversor","console","log","Object","keys","originalPoints","AppStyle","backgroundColor","minHeight","flexDirection","App","encodedData","setEncodedData","updateData","a","converter","newData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d6d1d39.chunk.js","sourcesContent":["// import './index.css'\r\nimport { Container, TextField, Select, Card, MenuItem, InputLabel, FormControl, CardContent, Typography } from '@material-ui/core'\r\nimport { useState } from 'react'\r\n\r\nconst ContainerStyle = {\r\n  padding: '1rem 0 0',\r\n  display: 'flex',\r\n  justifyContent: 'center'\r\n}\r\n\r\nconst CardStyle = {\r\n  width: '260px',\r\n  padding: '0 40px 0',\r\n  textAlign: 'center'\r\n}\r\n\r\nconst InputStyle = {\r\n  marginBottom: '15px',\r\n  maxWidth: '100%',\r\n  minWidth: '80px',\r\n  width: '100%',\r\n  verticalAlign: 'text-bottom'\r\n}\r\n\r\nfunction Input({submit, options}) {\r\n  const [data, setData] = useState('')\r\n  const [type, setType] = useState('')\r\n \r\n  const handleBinaryInput = (e) => {\r\n    const nonBinary = /[^0-1]+/g\r\n    const binary = /[01]*/g\r\n    const fail = nonBinary.test(e.target.value)\r\n    const clean = e.target.value.match(binary)\r\n    if (!fail)\r\n      submit({data: clean[0], type})\r\n      setData(clean[0])\r\n  }\r\n  return (\r\n    <Container style={ContainerStyle}>\r\n      <Card style={CardStyle}>\r\n        <CardContent>\r\n          <Typography style={{ fontSize: 16 }} color=\"textPrimary\">\r\n            Conversor de códigos de linha\r\n          </Typography>\r\n          <Typography style={{ fontSize: 14 }} color=\"textSecondary\">\r\n            Preencha as informações abaixo para utilizar o conversor.\r\n          </Typography>\r\n        \r\n          <FormControl style={{ margin: 0, width: '100%'}}>\r\n            <InputLabel id='oi'>Código de linha</InputLabel>\r\n            <Select\r\n              labelId='oi'\r\n              id=\"select\"\r\n              value={type}\r\n              style={InputStyle}\r\n              onChange={(event) => {\r\n                const newType = event.target.value\r\n                setType(newType)\r\n                if (data !== '')\r\n                  submit({data, type: newType})\r\n              }}\r\n            >\r\n              <MenuItem value=\"\" key='a'>\r\n                <em>None</em>\r\n              </MenuItem>\r\n              {\r\n                options.map((option, idx) => (\r\n                  <MenuItem value={option} key={idx}>{option}</MenuItem>\r\n                ))\r\n              }\r\n            </Select>\r\n            <TextField value={data} onChange={handleBinaryInput} style={InputStyle} label=\"Sinal de entrada\" />\r\n          </FormControl>\r\n        </CardContent>\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Input;\r\n","import { VictoryLine, VictoryTheme, VictoryAxis, VictoryLabel } from 'victory'\r\nimport { Container } from '@material-ui/core'\r\n\r\nconst ContainerStyle = {\r\n  maxWidth: '100%',\r\n  overflow: 'auto',\r\n}\r\n\r\nconst SvgStyle = {\r\n  border: '1px solid black',\r\n}\r\n\r\nfunction Graph({input, points}) {\r\n  const length = input.length ? input.length+1 : 6\r\n  const width = length*15 + 120 \r\n  const header = input.split('').map((char, idx) => \r\n    char\r\n  )\r\n\r\n  const tick = [1, 2, 3, 4, 5]\r\n  for (let i = 6; i <= input.length; i++) {\r\n    tick.push(i)\r\n  }\r\n  if (!tick.length) tick.push()\r\n\r\n  return (\r\n    <Container style={ContainerStyle}>\r\n      <svg width={width} height={170} style={SvgStyle}>\r\n        {header.map((char, index) => {\r\n          return (\r\n            <VictoryLine\r\n            \r\n            width={width}\r\n            height={170}\r\n            domain={{x: [0, length], y:[-2, 2]}}\r\n            style={{\r\n              data: { strokeWidth: 0 }\r\n            }}\r\n            data={[{x: index+0.5, y: 2}, {x: index+0.5, y: 2}]}\r\n            labels={header.length ? `${char}` : ''}\r\n            labelComponent={<VictoryLabel y={72} />}\r\n            standalone={false}\r\n            />\r\n          )\r\n        })}\r\n        <VictoryAxis crossAxis\r\n          width={width}\r\n          height={170}\r\n          tickValues={tick}\r\n          style={{\r\n            grid : {\r\n              stroke: '#999',\r\n            },\r\n            axis: {\r\n              stroke: '#999'\r\n            },\r\n            tickLabels: {\r\n              fill: 'transparent'\r\n            }\r\n          }}\r\n          domain={{x: [0, length], y:[-2, 2]}}\r\n          theme={VictoryTheme.material}\r\n          y={0}\r\n          standalone={false}\r\n          />\r\n        <VictoryAxis dependentAxis crossAxis\r\n          width={width}\r\n          height={170}\r\n          style={{\r\n            axis: {\r\n              stroke: '#999'\r\n            },\r\n            ticks: {\r\n              stroke: '#999'\r\n            },\r\n            grid: {\r\n              stroke: 'transparent'\r\n            },\r\n            tickLabels: {\r\n              fill: 'transparent'\r\n            }\r\n          }}\r\n          tickValues={[-1,0,1]}\r\n          domain={{x: [0, length], y:[-2, 2]}}\r\n          theme={VictoryTheme.material}\r\n          x={0}\r\n          standalone={false}\r\n        />\r\n        <VictoryLine\r\n          standalone={false}\r\n          width={width}\r\n          height={170}\r\n          domain={{x: [0, length], y:[-2, 2]}}\r\n          style={{\r\n            data: { stroke: \"red\" },\r\n          }}\r\n          data={ points.length ? points : [{ x: 0, y: 0 }] }\r\n        />\r\n      </svg>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Graph;\r\n","import { Container, Card, CardContent, Typography } from '@material-ui/core'\r\nimport Graph from '../Graph'\r\n\r\nconst ContainerStyle = {\r\n  maxWidt: '100%',\r\n  padding: '2rem 0',\r\n  display: 'flex',\r\n  justifyContent: 'center'\r\n}\r\n\r\nconst CardStyle = {\r\n  padding: '20px 40px',\r\n}\r\n\r\n\r\nfunction Output({data}) {\r\n  return (\r\n    <Container style={ContainerStyle}>\r\n      <Card style={CardStyle}>\r\n          {data.typeName && (\r\n            <>             \r\n              <Typography style={{ textAlign: 'center' }}>\r\n                {data.typeName}\r\n              </Typography>\r\n              <Graph input={data.originalValue} points={data.convertedPoints} />\r\n            </>\r\n          )}\r\n          {!data.typeName && (\r\n            <Typography style={{ textAlign: 'center' }}>\r\n              Selecione o tipo de código de linha e o valor para realizar a conversão.\r\n            </Typography>\r\n          )}\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Output;\r\n","import nrz_l from './nrz_l';\r\nimport nrz_i from './nrz_i';\r\nimport ami from './ami';\r\nimport pseudoternary from './pseudoternary';\r\nimport manchester from './manchester';\r\nimport diferentialManchester from './diferentialManchester';\r\n\r\nexport const convertions = {\r\n  'NRZ-L': nrz_l,\r\n  'NRZ-I': nrz_i,\r\n  'AMI': ami,\r\n  'Pseudoternário': pseudoternary,\r\n  'Manchester': manchester,\r\n  'Manchester Diferencial': diferentialManchester,\r\n};\r\n\r\nexport default function conversor(data) {\r\n  console.log(Object.keys(convertions));\r\n  if (!convertions[data.type] || data.data === '') {\r\n    return {\r\n      originalValue: data.data,\r\n      originalPoints: [],\r\n      convertedPoints: [],\r\n      typeName: null,\r\n    };\r\n  }\r\n  const convertedPoints = convertions[data.type](data.data);\r\n  const newData = {\r\n    originalValue: data.data,\r\n    convertedPoints,\r\n    typeName: data.type,\r\n  };\r\n  return newData;\r\n}\r\n","export default function nrz_l(input) {\r\n  const chars = input.split('');\r\n  const nestedPoints = chars.map((char, index) => {\r\n    const value = char === '1' ? 1 : -1;\r\n    return [\r\n      { x: index, y: value },\r\n      { x: index + 1, y: value },\r\n    ];\r\n  });\r\n  const output = nestedPoints.flat();\r\n  return output;\r\n}\r\n","export default function nrz_i(input) {\r\n  const chars = input.split('');\r\n  let prev = 1;\r\n  const nestedPoints = chars.map((char, index) => {\r\n    const change = char === '1';\r\n    let val = prev;\r\n    if (change) {\r\n      val = -prev;\r\n    }\r\n    prev = val;\r\n    return [\r\n      { x: index, y: val },\r\n      { x: index + 1, y: val },\r\n    ];\r\n  });\r\n  const output = nestedPoints.flat();\r\n  return output;\r\n}\r\n","export default function ami(input) {\r\n  const chars = input.split('');\r\n  let prevOne = -1;\r\n  let val;\r\n  const nestedPoints = chars.map((char, index) => {\r\n    if (char === '1') {\r\n      val = prevOne * -1;\r\n      prevOne = val;\r\n    } else {\r\n      val = 0;\r\n    }\r\n    return [\r\n      { x: index, y: val },\r\n      { x: index + 1, y: val },\r\n    ];\r\n  });\r\n  const output = nestedPoints.flat();\r\n  return output;\r\n}\r\n","export default function preudoternary(input) {\r\n  const chars = input.split('');\r\n  let prevZero = -1;\r\n  let val;\r\n  const nestedPoints = chars.map((char, index) => {\r\n    if (char === '0') {\r\n      val = prevZero * -1;\r\n      prevZero = val;\r\n    } else {\r\n      val = 0;\r\n    }\r\n    return [\r\n      { x: index, y: val },\r\n      { x: index + 1, y: val },\r\n    ];\r\n  });\r\n  const output = nestedPoints.flat();\r\n  return output;\r\n}\r\n","export default function preudoternary(input) {\r\n  const chars = input.split('');\r\n  const nestedPoints = chars.map((char, index) => {\r\n    let beginning = -1;\r\n    let end = 1;\r\n    if (char === '0') {\r\n      beginning = 1;\r\n      end = -1;\r\n    }\r\n    return [\r\n      { x: index, y: beginning },\r\n      { x: index + 0.5, y: beginning },\r\n      { x: index + 0.5, y: end },\r\n      { x: index + 1, y: end },\r\n    ];\r\n  });\r\n  const output = nestedPoints.flat();\r\n  return output;\r\n}\r\n","export default function preudoternary(input) {\r\n  const chars = input.split('');\r\n  let beginning = -1;\r\n  let end = 1;\r\n  const nestedPoints = chars.map((char, index) => {\r\n    if (char === '1') {\r\n      beginning *= -1;\r\n      end *= -1;\r\n    }\r\n    return [\r\n      { x: index, y: beginning },\r\n      { x: index + 0.5, y: beginning },\r\n      { x: index + 0.5, y: end },\r\n      { x: index + 1, y: end },\r\n    ];\r\n  });\r\n  const output = nestedPoints.flat();\r\n  return output;\r\n}\r\n","import { useState } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport Input from './components/Input';\r\nimport Output from './components/Output';\r\nimport converter, { convertions } from './utils/converter';\r\nconst AppStyle = {\r\n  backgroundColor: '#CCC',\r\n  maxWidth: '100vw',\r\n  minHeight: '100vh',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n};\r\n\r\nfunction App() {\r\n  const [encodedData, setEncodedData] = useState({\r\n    originalValue: '',\r\n    originalPoints: [],\r\n    convertedPoints: [],\r\n    typeName: null,\r\n  });\r\n\r\n  const updateData = async (data) => {\r\n    const newData = await converter(data);\r\n    setEncodedData(newData);\r\n  };\r\n  return (\r\n    <Container style={AppStyle}>\r\n      <Input submit={updateData} options={Object.keys(convertions)} />\r\n      <Output data={encodedData} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}